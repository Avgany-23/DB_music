DROP TABLE IF EXISTS Genres CASCADE;
DROP TABLE IF EXISTS Singers CASCADE;
DROP TABLE IF EXISTS Albums CASCADE;
DROP TABLE IF EXISTS SingersGenre CASCADE;
DROP TABLE IF EXISTS SingersAlbums CASCADE;
DROP TABLE IF EXISTS Songs CASCADE;
DROP TABLE IF EXISTS Collections CASCADE;


CREATE TABLE IF NOT EXISTS Genres
(
	id SERIAL PRIMARY KEY,
    title VARCHAR(40) DEFAULT 'NoName' NOT NULL
);

CREATE TABLE IF NOT EXISTS Singers
(
	id SERIAL PRIMARY KEY,
    name VARCHAR(20) DEFAULT 'NoName' NOT NULL,
    surname VARCHAR(20) DEFAULT 'NoSurname' NOT NULL
);

CREATE TABLE IF NOT EXISTS Albums
(
	id SERIAL PRIMARY KEY,
    name_album VARCHAR(50) NOT NULL,
    date_release DATE CHECK (date_release > '1900-01-01') NOT NULL
);

CREATE TABLE IF NOT EXISTS SingersGenre
(
	id SERIAL PRIMARY KEY,
    genre_id INT,
    singer_id INT,
    FOREIGN KEY (genre_id) REFERENCES Genres (id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (singer_id) REFERENCES Singers (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SingersAlbums
(
	id SERIAL PRIMARY KEY,
    singer_id INT,
    album_id INT,
    FOREIGN KEY (singer_id) REFERENCES Singers (id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (album_id) REFERENCES Albums (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Songs
(
	id SERIAL PRIMARY KEY,
    album_id INT,
    name_song VARCHAR(50) CHECK (name_song != '') NOT NULL,
    date_release DATE CHECK (date_release > '1900-01-01') NOT NULL,
    duration INT CHECK (duration > 0) NOT NULL,
    FOREIGN KEY (album_id) REFERENCES Albums (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Collections
(
	id SERIAL PRIMARY KEY,
    title VARCHAR(30) NOT NULL,
    year_release INT NOT NULL

);

CREATE TABLE IF NOT EXISTS CollectionsSongs
(
	id SERIAL PRIMARY KEY,
    song_id INT,
    collection_id INT,
    FOREIGN KEY (song_id) REFERENCES Songs (id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (collection_id) REFERENCES Collections (id) ON UPDATE CASCADE ON DELETE CASCADE
);